# CMake file for Fortran 90 adapter
# 2014-03-11, Bin Gao:
# * generated by tools/qcmatrix_fortran.py
# Sets Fortran compiler flags
SET(LANG_F_MODULE "lib_matrix" CACHE STRING "Name of external Fortran 90 matrix module.")
SET(LANG_F_MATRIX "matrix_t" CACHE STRING "Name of external Fortran 90 matrix type.")
SET(SIZEOF_F_TYPE_P "12" CACHE STRING "Size (in bytes) of Fortran 90 derived types with a single pointer member.")
ADD_DEFINITIONS(-DLANG_F_MODULE=${LANG_F_MODULE})
ADD_DEFINITIONS(-DLANG_F_MATRIX=${LANG_F_MATRIX})
ADD_DEFINITIONS(-DSIZEOF_F_TYPE_P=${SIZEOF_F_TYPE_P})
# Source codes of the adapter for the external Fortran 90 library
SET(ADAPTER_SRCS
    ${LIB_QCMATRIX_PATH}/src/adapter/f90_adapter_f.F90
    ${LIB_QCMATRIX_PATH}/src/adapter/f90_adapter_c.c)
# Fortran 90 subroutines of the adapter
SET(FC_MANGLING_SUB ${FC_MANGLING_SUB} f90_adapter:Mat_Ptr_Create)
SET(FC_MANGLING_SUB ${FC_MANGLING_SUB} f90_adapter:Mat_Ptr_Destroy)
IF(ADAPTER_BLOCK_CMPLX OR ADAPTER_BLOCK_REAL)
    SET(FC_MANGLING_SUB ${FC_MANGLING_SUB} f90_adapter:Mat_Ptr_BlockCreate)
ENDIF()
SET(FC_MANGLING_SUB ${FC_MANGLING_SUB} f90_adapter:Mat_Ptr_SetSymType)
IF(ADAPTER_BLOCK_CMPLX OR ADAPTER_CMPLX_MAT)
    SET(FC_MANGLING_SUB ${FC_MANGLING_SUB} f90_adapter:Mat_Ptr_SetDataType)
ELSEIF(ADAPTER_BLOCK_REAL)
    SET(FC_MANGLING_SUB ${FC_MANGLING_SUB} f90_adapter:Mat_Ptr_SetNonZeroBlocks)
ENDIF()
SET(FC_MANGLING_SUB ${FC_MANGLING_SUB} f90_adapter:Mat_Ptr_SetDimMat)
IF(QCMATRIX_STORAGE_MODE)
    SET(FC_MANGLING_SUB ${FC_MANGLING_SUB} f90_adapter:Mat_Ptr_SetStorageMode)
ENDIF()
SET(FC_MANGLING_SUB ${FC_MANGLING_SUB} f90_adapter:Mat_Ptr_Assemble)
IF(ADAPTER_BLOCK_CMPLX OR ADAPTER_BLOCK_REAL)
    SET(FC_MANGLING_SUB ${FC_MANGLING_SUB} f90_adapter:Mat_Ptr_GetDimBlock)
ENDIF()
SET(FC_MANGLING_SUB ${FC_MANGLING_SUB} f90_adapter:Mat_Ptr_GetSymType)
IF(ADAPTER_BLOCK_CMPLX OR ADAPTER_CMPLX_MAT)
    SET(FC_MANGLING_SUB ${FC_MANGLING_SUB} f90_adapter:Mat_Ptr_GetDataType)
ELSEIF(ADAPTER_BLOCK_REAL)
    SET(FC_MANGLING_SUB ${FC_MANGLING_SUB} f90_adapter:Mat_Ptr_GetNonZeroBlocks)
ENDIF()
SET(FC_MANGLING_SUB ${FC_MANGLING_SUB} f90_adapter:Mat_Ptr_GetDimMat)
IF(QCMATRIX_STORAGE_MODE)
    SET(FC_MANGLING_SUB ${FC_MANGLING_SUB} f90_adapter:Mat_Ptr_GetStorageMode)
ENDIF()
SET(FC_MANGLING_SUB ${FC_MANGLING_SUB} f90_adapter:Mat_Ptr_IsAssembled)
IF(ADAPTER_BLOCK_CMPLX OR ADAPTER_CMPLX_MAT)
    SET(FC_MANGLING_SUB ${FC_MANGLING_SUB} f90_adapter:Mat_Ptr_SetRealValues)
    SET(FC_MANGLING_SUB ${FC_MANGLING_SUB} f90_adapter:Mat_Ptr_SetImagValues)
    SET(FC_MANGLING_SUB ${FC_MANGLING_SUB} f90_adapter:Mat_Ptr_AddRealValues)
    SET(FC_MANGLING_SUB ${FC_MANGLING_SUB} f90_adapter:Mat_Ptr_AddImagValues)
    SET(FC_MANGLING_SUB ${FC_MANGLING_SUB} f90_adapter:Mat_Ptr_GetRealValues)
    SET(FC_MANGLING_SUB ${FC_MANGLING_SUB} f90_adapter:Mat_Ptr_GetImagValues)
ELSE()
    SET(FC_MANGLING_SUB ${FC_MANGLING_SUB} f90_adapter:Mat_Ptr_SetValues)
    SET(FC_MANGLING_SUB ${FC_MANGLING_SUB} f90_adapter:Mat_Ptr_AddValues)
    SET(FC_MANGLING_SUB ${FC_MANGLING_SUB} f90_adapter:Mat_Ptr_GetValues)
ENDIF()
SET(FC_MANGLING_SUB ${FC_MANGLING_SUB} f90_adapter:Mat_Ptr_Duplicate)
SET(FC_MANGLING_SUB ${FC_MANGLING_SUB} f90_adapter:Mat_Ptr_ZeroEntries)
SET(FC_MANGLING_SUB ${FC_MANGLING_SUB} f90_adapter:Mat_Ptr_GetTrace)
SET(FC_MANGLING_SUB ${FC_MANGLING_SUB} f90_adapter:Mat_Ptr_GetMatProdTrace)
IF(QCMATRIX_ENABLE_VIEW)
    SET(FC_MANGLING_SUB ${FC_MANGLING_SUB} f90_adapter:Mat_Ptr_Write)
ENDIF()
IF(QCMATRIX_ENABLE_VIEW)
    SET(FC_MANGLING_SUB ${FC_MANGLING_SUB} f90_adapter:Mat_Ptr_Read)
ENDIF()
SET(FC_MANGLING_SUB ${FC_MANGLING_SUB} f90_adapter:Mat_Ptr_Scale)
SET(FC_MANGLING_SUB ${FC_MANGLING_SUB} f90_adapter:Mat_Ptr_AXPY)
SET(FC_MANGLING_SUB ${FC_MANGLING_SUB} f90_adapter:Mat_Ptr_Transpose)
SET(FC_MANGLING_SUB ${FC_MANGLING_SUB} f90_adapter:Mat_Ptr_GEMM)
